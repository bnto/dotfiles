#!/usr/bin/env bash

STATUS_FILE="/tmp/pomo_status"
PID_FILE="/tmp/pomo_pid"
STATE_FILE="/tmp/pomo_state"
POMODORO_DURATION=1500  # 25 minutes
BREAK_DURATION=300      # 5 minutes
COFFEE=$(printf '\xEF\x83\xB4') # 
POMODORO=$(printf '\xEE\x80\x81') # 

update_status() {
    echo "$1" > "$STATUS_FILE"
    tmux refresh-client -S
}

run_timer() {
    local duration=$1
    local emoji=$2

    SECONDS_LEFT=$duration
    while [ $SECONDS_LEFT -gt 0 ]; do
        MIN=$((SECONDS_LEFT / 60))
        SEC=$((SECONDS_LEFT % 60))
        update_status "$emoji  $(printf "%02d:%02d" $MIN $SEC)  "
        sleep 1
        SECONDS_LEFT=$((SECONDS_LEFT - 1))
    done
}

start_pomodoro() {
    cancel_pomodoro

    (
        echo "running" > "$STATE_FILE"
        run_timer $POMODORO_DURATION $POMODORO
        update_status "$COFFEE   "
        tmux display-popup "echo -n 'Time for a break !'"
        sleep 3

        echo "break" > "$STATE_FILE"
        run_timer $BREAK_DURATION $COFFEE
        update_status "$POMODORO   "
        rm -f "$PID_FILE" "$STATE_FILE"
    ) &
    echo $! > "$PID_FILE"
}

cancel_pomodoro() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if kill -0 "$PID" 2>/dev/null; then
            kill -9 "$PID"
        fi
        rm -f "$PID_FILE" "$STATE_FILE"
        update_status ""
    fi
}

case "$1" in
    cancel) cancel_pomodoro ;;
    *) start_pomodoro ;;
esac
