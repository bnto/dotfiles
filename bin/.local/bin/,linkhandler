#!/usr/bin/env bash

# linkhandler
#   A bash script that smartly handles a given URL

export COURRIER_COOKIE="$(security find-generic-password -a ${USER} -s COURRIER_COOKIE -w)"
export PM_API_KEY=$(security find-generic-password -a ${USER} -s PM_API_KEY -w)
export PINBOARD_TOKEN=$(security find-generic-password -a ${USER} -s PINBOARD_TOKEN -w)
export PROXY=
export PROXY_AUTH=

[ -z "$1" ] && { "$BROWSER"; exit; }

case "$1 $2" in
  *use_w3m*)
    clear
    echo "Loading article in w3m..."
    curl -s -L --cookie $COURRIER_COOKIE "$1" \
      | readable -q \
      | w3m -sixel -o auto_image=TRUE -o display_image=1 -T text/html
  ;;

  *bypass_paywall*)
    # using https://github.com/everywall/ladder
    echo "Loading article..." && \
    echo "Stripping out paywall..." && \
    curl -s -X GET "$PROXY/$1" -u $PROXY_AUTH | readable -q | \
    pandoc -f html -t gfm --wrap=none --columns=80 --quiet | sed 's/\\//g' | glow -p
  ;;

  # Render images
  *.png*|*.jpg*|*.webp*|*.jpeg*|*.gif*|*assets.amuniversal.com*|*pbs.twimg.com*|*image)
    echo "Loading image..." && \
    curl -# "$1" | feh --borderless -
    read -n 1 -s
    ;;

  # Save to Pinboard
  *youtube.com/watch*|*youtube.com/playlist*|*youtu.be*|*youtube.com/embed/*)
    read -p "Do you want to save this to Pinboard? [y/N] " -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      clear
      echo "Saving to pinboard..." && \
      curl -X GET -G \
      -d url="$1" \
      -d tags=yt \
      -d toread=yes \
      -d description=$(echo "$2" | tr ' ' '_') \
      https://api.pinboard.in/v1/posts/add?auth_token=$PINBOARD_TOKEN
    fi
    read -n 1 -s
    ;;

  # Play video
  *.mkv*|*.webm*|*.mp4*)
    mpv "$1"
    ;;

  # Download torrent
  *.torrent*)
    read -p "Do you want to download this torrent? [y/N]" -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      clear
      echo "Adding torrent..." && \
      curl -X POST -F src="$1" \
      -F folder_id=PLbaYR9HrdFtC7oztsm0KQ \
      https://www.premiumize.me/api/transfer/create?apikey=$PM_API_KEY
    fi
    read -n 1 -s
    ;;

  # Show top reddit comments
  *reddit.com*)
    echo "Loading reddio..." && \
    reddio print -s top $(echo "$1" | grep -E -o '(comments\/.*)') | glow -p
    ;;

  # everything else gets filtered through readability
  http://*|https://*)
    BASE_URL=$(echo "$1" | sed -E 's|(https?://[^/]+).*|\1|') && \
    echo "Loading article..." && \
    curl -s -L --cookie $COURRIER_COOKIE "$1" | \
    sed -E "s|href=\"(/[^\"#]*)\"|href=\"$BASE_URL\1\"|g; s|src=\"(/[^\"#]*)\"|src=\"$BASE_URL\1\"|g" | \
    readable -q | \
    pandoc -f html -t gfm --wrap=none --columns=80 --quiet | sed 's/\\//g' | \
    awk '{print} END {for(i=0;i<20;i++) print "~\n"}' | glow -p
    ;;

  # Open with default browser using +url
  '+http'*)
    os=$(uname -s | tr '[:upper:]' '[:lower:]')
    case "$os" in
      linux*)
        setsid -f firefox "${1##+}"
        ;;
      darwin*)
        open -a 'Safari' "${1##+}"
        ;;
      msys*|cygwin*|mingw*|nt|win*)
        printf "Windows not supported.\n" >&2
        ;;
      *)
        printf "Operating system %s is unknown.\n" "$os"
        ;;
    esac
    ;;
  *)

  # Open with default editor
    if [ -f "$1" ]; then "$EDITOR" "$1"
    else open "$1" >/dev/null 2>&1
    fi
    ;;
esac

clear # clear the terminal screen
exit 0
