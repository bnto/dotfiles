#!/usr/bin/env bash

PROJECT=$(tmux display-message -p '#S')
CMD="task rc.defaultwidth:0 rc.verbose:nothing ls created- desc project:$PROJECT or project:"

$CMD | fzf \
  --ansi \
  --with-nth=3.. \
  --header $'\n\e[40m \uf0aeÂ  '"$PROJECT"$' \e[0m \e[34mctrl-a\e[0m add | \e[36mctrl-e\e[0m edit | \e[31mctrl-x\e[0m delete | \e[33mctrl-u\e[0m undo | \e[35menter\e[0m toggle\n\n' \
  --bind "ctrl-a:execute(task add {q} project:$PROJECT start:now)+change-query()+reload($CMD)" \
  --bind "ctrl-x:execute(task rc.verbose:nothing rc.confirmation=no delete {1})+reload($CMD)" \
  --bind "ctrl-e:execute(clear; read -p 'Description: ' -e -i \"\$(task _get {1}.description)\" desc; task {1} modify description:\"\$desc\")+reload($CMD)" \
  --bind "ctrl-p:execute-silent(task _get {1}.description > /tmp/tmuxmessage ; task {1} start ; tmux refresh-client -S)+reload($CMD)" \
  --bind "ctrl-y:execute-silent(task _get {1}.description | xclip -selection clipboard)" \
  --bind "ctrl-u:execute(task rc.confirmation=no undo)+reload($CMD)" \
  --bind "ctrl-r:reload($CMD)" \
  --bind "ctrl-t:reload(task rc.defaultwidth:0 rc.verbose:nothing ls created- desc)" \
  --bind "enter:execute-silent(task {1} | grep -q active && task {1} stop || task {1} start)+reload($CMD)"
